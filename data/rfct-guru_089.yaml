- en: Preserve Whole Object
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保持整个对象
- en: 原文：[https://refactoringguru.cn/preserve-whole-object](https://refactoringguru.cn/preserve-whole-object)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://refactoringguru.cn/preserve-whole-object](https://refactoringguru.cn/preserve-whole-object)
- en: Problem
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题
- en: You get several values from an object and then pass them as parameters to a
    method.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 你从一个对象获取多个值，然后将它们作为参数传递给一个方法。
- en: Solution
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: Instead, try passing the whole object.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，试着传递整个对象。
- en: Before
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 之前
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 之后
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Before
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 之前
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: After
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 之后
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Before
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 之前
- en: '[PRE4]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: After
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 之后
- en: '[PRE5]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Before
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 之前
- en: '[PRE6]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: After
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 之后
- en: '[PRE7]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Before
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 之前
- en: '[PRE8]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: After
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 之后
- en: '[PRE9]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Why Refactor
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么重构
- en: The problem is that each time before your method is called, the methods of the
    future parameter object must be called. If these methods or the quantity of data
    obtained for the method are changed, you will need to carefully find a dozen such
    places in the program and implement these changes in each of them.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 问题是每次在调用方法之前，未来参数对象的方法都必须被调用。如果这些方法或获取的数据量发生变化，你需要仔细找到程序中十几个这样的地方，并在每个地方实施这些更改。
- en: After you apply this refactoring technique, the code for getting all necessary
    data will be stored in one place—the method itself.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用此重构技术后，获取所有必要数据的代码将存储在一个地方——方法本身。
- en: Benefits
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 好处
- en: Instead of a hodgepodge of parameters, you see a single object with a comprehensible
    name.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你看到的不是一堆杂乱无章的参数，而是一个具有可理解名称的单一对象。
- en: If the method needs more data from an object, you won't need to rewrite all
    the places where the method is used—merely inside the method itself.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果方法需要从一个对象中获取更多数据，你不需要重写所有使用该方法的地方——只需在方法内部进行修改。
- en: Drawbacks
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缺点
- en: 'Sometimes this transformation causes a method to become less flexible: previously
    the method could get data from many different sources but now, because of refactoring,
    we''re limiting its use to only objects with a particular interface.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时这种转变会导致方法变得不那么灵活：之前方法可以从许多不同来源获取数据，但现在由于重构，我们将其使用限制在只有特定接口的对象。
- en: How to Refactor
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何重构
- en: Create a parameter in the method for the object from which you can get the necessary
    values.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在方法中创建一个参数，以获取所需值的对象。
- en: Now start removing the old parameters from the method one by one, replacing
    them with calls to the relevant methods of the parameter object. Test the program
    after each replacement of a parameter.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在开始逐一删除方法中的旧参数，用参数对象相关方法的调用替换它们。每替换一个参数后测试程序。
- en: Delete the getter code from the parameter object that had preceded the method
    call.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从参数对象中删除在方法调用之前的获取器代码。
- en: '[</images/refactoring/banners/tired-of-reading-banner-1x.mp4?id=7fa8f9682afda143c2a491c6ab1c1e56>'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[</images/refactoring/banners/tired-of-reading-banner-1x.mp4?id=7fa8f9682afda143c2a491c6ab1c1e56>'
- en: </images/refactoring/banners/tired-of-reading-banner.png?id=1721d160ff9c84cbf8912f5d282e2bb4>
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: </images/refactoring/banners/tired-of-reading-banner.png?id=1721d160ff9c84cbf8912f5d282e2bb4>
- en: Your browser does not support HTML video.](/refactoring/course)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你的浏览器不支持HTML视频。](/refactoring/course)
- en: Tired of reading?
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 厌倦阅读了吗？
- en: No wonder, it takes 7 hours to read all of the text we have here.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 难怪，阅读我们这里所有的文本需要7小时。
- en: Try our interactive course on refactoring. It offers a less tedious approach
    to learning new stuff.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试我们的交互式重构课程。它提供了一种不那么乏味的学习新知识的方法。
- en: '[*Let''s see…*](/refactoring/course)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[*让我们看看…*](/refactoring/course)'

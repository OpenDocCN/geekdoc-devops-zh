- en: Comments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注释
- en: 原文：[https://refactoringguru.cn/smells/comments](https://refactoringguru.cn/smells/comments)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://refactoringguru.cn/smells/comments](https://refactoringguru.cn/smells/comments)
- en: Signs and Symptoms
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 迹象与症状
- en: A method is filled with explanatory comments.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 方法中充满了解释性注释。
- en: '![](../Images/8e5f0094c7bdcf4a0c4e6c213ad8fc48.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8e5f0094c7bdcf4a0c4e6c213ad8fc48.png)'
- en: Reasons for the Problem
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题原因
- en: Comments are usually created with the best of intentions, when the author realizes
    that his or her code isn't intuitive or obvious. In such cases, comments are like
    a deodorant masking the smell of fishy code that could be improved.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 注释通常是出于最好的意图而创建的，当作者意识到自己的代码不够直观或明显时。在这种情况下，注释就像是遮盖鱼腥味代码气味的除臭剂，这些代码是可以改进的。
- en: The best comment is a good name for a method or class.
  id: totrans-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 最好的注释是方法或类的好名称。
- en: If you feel that a code fragment can't be understood without comments, try to
    change the code structure in a way that makes comments unnecessary.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你觉得没有注释就无法理解某段代码，请尝试改变代码结构，使得注释变得不必要。
- en: Treatment
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 处理方法
- en: If a comment is intended to explain a complex expression, the expression should
    be split into understandable subexpressions using [Extract Variable](/extract-variable).
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果注释旨在解释复杂的表达式，则应使用[提取变量](/extract-variable)将表达式拆分为易于理解的子表达式。
- en: If a comment explains a section of code, this section can be turned into a separate
    method via [Extract Method](/extract-method). The name of the new method can be
    taken from the comment text itself, most likely.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果注释解释了一段代码，则可以通过[提取方法](/extract-method)将该部分代码转换为单独的方法。新方法的名称通常可以直接取自注释文本。
- en: If a method has already been extracted, but comments are still necessary to
    explain what the method does, give the method a self-explanatory name. Use [Rename
    Method](/rename-method) for this.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果一个方法已经被提取，但仍然需要注释来解释该方法的作用，请给该方法一个自解释的名称。为此请使用[重命名方法](/rename-method)。
- en: If you need to assert rules about a state that's necessary for the system to
    work, use [Introduce Assertion](/introduce-assertion).
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果需要对系统正常工作所必需的状态进行规则断言，请使用[引入断言](/introduce-assertion)。
- en: Payoff
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 收益
- en: Code becomes more intuitive and obvious.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码变得更加直观和明显。
- en: '![](../Images/985d9e0b169b2aa6a13c1d325556ba35.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/985d9e0b169b2aa6a13c1d325556ba35.png)'
- en: When to Ignore
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 何时忽略
- en: 'Comments can sometimes be useful:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 注释有时是有用的：
- en: When explaining **why** something is being implemented in a particular way.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当解释**为什么**以某种特定方式实现某个功能时。
- en: When explaining complex algorithms (when all other methods for simplifying the
    algorithm have been tried and come up short).
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当解释复杂算法时（当尝试了所有简化算法的方法但仍然无法奏效时）。
- en: '[</images/refactoring/banners/tired-of-reading-banner-1x.mp4?id=7fa8f9682afda143c2a491c6ab1c1e56>'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[</images/refactoring/banners/tired-of-reading-banner-1x.mp4?id=7fa8f9682afda143c2a491c6ab1c1e56>'
- en: </images/refactoring/banners/tired-of-reading-banner.png?id=1721d160ff9c84cbf8912f5d282e2bb4>
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: </images/refactoring/banners/tired-of-reading-banner.png?id=1721d160ff9c84cbf8912f5d282e2bb4>
- en: Your browser does not support HTML video.](/refactoring/course)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 您的浏览器不支持HTML视频。](/refactoring/course)
- en: Tired of reading?
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 读累了吗？
- en: No wonder, it takes 7 hours to read all of the text we have here.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 毫不奇怪，阅读我们这里所有的文本需要7小时。
- en: Try our interactive course on refactoring. It offers a less tedious approach
    to learning new stuff.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试我们的交互式重构课程。这提供了一种不那么乏味的学习新知识的方法。
- en: '[*Let''s see…*](/refactoring/course)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[*让我们看看……*](/refactoring/course)'

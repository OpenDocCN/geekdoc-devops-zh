- en: Encapsulate Field
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://refactoringguru.cn/encapsulate-field](https://refactoringguru.cn/encapsulate-field)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You have a public field.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Make the field private and create access methods for it.
  prefs: []
  type: TYPE_NORMAL
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Why Refactor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: One of the pillars of object-oriented programming is *Encapsulation*, the ability
    to conceal object data. Otherwise, all objects would be public and other objects
    could get and modify the data of your object without any checks and balances!
    Data is separated from the behaviors associated with this data, modularity of
    program sections is compromised, and maintenance becomes complicated.
  prefs: []
  type: TYPE_NORMAL
- en: Benefits
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If the data and behavior of a component are closely interrelated and are in
    the same place in the code, it's much easier for you to maintain and develop this
    component.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can also perform complicated operations related to access to object fields.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When Not to Use
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In some cases, encapsulation is ill-advised due to performance considerations.
    These cases are rare but when they happen, this circumstance is very important.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Say that you have a graphical editor that contains objects possessing x- and
    y-coordinates. These fields are unlikely to change in the future. What's more,
    the program involves a great many different objects in which these fields are
    present. So accessing the coordinate fields directly saves significant CPU cycles
    that would otherwise be taken up by calling access methods.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: As an example of this unusual case, there's the [Point](http://docs.oracle.com/javase/7/docs/api/java/awt/Point.html)
    class in Java. All fields of this class are public.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: How to Refactor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Create a getter and setter for the field.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find all invocations of the field. Replace receipt of the field value with the
    getter, and replace setting of new field values with the setter.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After all field invocations have been replaced, make the field private.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next Steps
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*Encapsulate Field* is only the first step in bringing data and the behaviors
    involving this data closer together. After you create simple methods for access
    fields, you should recheck the places where these methods are called. It''s quite
    possible that the code in these areas would look more appropriate in the access
    methods.'
  prefs: []
  type: TYPE_NORMAL
- en: '[</images/refactoring/banners/tired-of-reading-banner-1x.mp4?id=7fa8f9682afda143c2a491c6ab1c1e56>'
  prefs: []
  type: TYPE_NORMAL
- en: </images/refactoring/banners/tired-of-reading-banner.png?id=1721d160ff9c84cbf8912f5d282e2bb4>
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support HTML video.](/refactoring/course)
  prefs: []
  type: TYPE_NORMAL
- en: Tired of reading?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: No wonder, it takes 7 hours to read all of the text we have here.
  prefs: []
  type: TYPE_NORMAL
- en: Try our interactive course on refactoring. It offers a less tedious approach
    to learning new stuff.
  prefs: []
  type: TYPE_NORMAL
- en: '[*Let''s see…*](/refactoring/course)'
  prefs: []
  type: TYPE_NORMAL

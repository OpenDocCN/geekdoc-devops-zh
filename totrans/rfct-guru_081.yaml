- en: Introduce Assertion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://refactoringguru.cn/introduce-assertion](https://refactoringguru.cn/introduce-assertion)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For a portion of code to work correctly, certain conditions or values must be
    true.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Replace these assumptions with specific assertion checks.
  prefs: []
  type: TYPE_NORMAL
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Why Refactor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Say that a portion of code assumes something about, for example, the current
    condition of an object or value of a parameter or local variable. Usually this
    assumption will always hold true except in the event of an error.
  prefs: []
  type: TYPE_NORMAL
- en: Make these assumptions obvious by adding corresponding assertions. As with type
    hinting in method parameters, these assertions can act as live documentation for
    your code.
  prefs: []
  type: TYPE_NORMAL
- en: As a guideline to see where your code needs assertions, check for comments that
    describe the conditions under which a particular method will work.
  prefs: []
  type: TYPE_NORMAL
- en: Benefits
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If an assumption isn't true and the code therefore gives the wrong result, it's
    better to stop execution before this causes fatal consequences and data corruption.
    This also means that you neglected to write a necessary test when devising ways
    to perform testing of the program.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Drawbacks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Sometimes an exception is more appropriate than a simple assertion. You can
    select the necessary class of the exception and let the remaining code handle
    it correctly.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When is an exception better than a simple assertion? If the exception can be
    caused by actions of the user or system and you can handle the exception. On the
    other hand, ordinary unnamed and unhandled exceptions are basically equivalent
    to simple assertions—you don't handle them and they're caused exclusively as the
    result of a program bug that never should have occurred.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to Refactor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you see that a condition is assumed, add an assertion for this condition
    in order to make sure.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the assertion shouldn't change the program's behavior.
  prefs: []
  type: TYPE_NORMAL
- en: Don't overdo it with use of assertions for **everything** in your code. Check
    for only the conditions that are necessary for correct functioning of the code.
    If your code is working normally even when a particular assertion is false, you
    can safely remove the assertion.
  prefs: []
  type: TYPE_NORMAL
- en: '[</images/refactoring/banners/tired-of-reading-banner-1x.mp4?id=7fa8f9682afda143c2a491c6ab1c1e56>'
  prefs: []
  type: TYPE_NORMAL
- en: </images/refactoring/banners/tired-of-reading-banner.png?id=1721d160ff9c84cbf8912f5d282e2bb4>
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support HTML video.](/refactoring/course)
  prefs: []
  type: TYPE_NORMAL
- en: Tired of reading?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: No wonder, it takes 7 hours to read all of the text we have here.
  prefs: []
  type: TYPE_NORMAL
- en: Try our interactive course on refactoring. It offers a less tedious approach
    to learning new stuff.
  prefs: []
  type: TYPE_NORMAL
- en: '[*Let''s see…*](/refactoring/course)'
  prefs: []
  type: TYPE_NORMAL

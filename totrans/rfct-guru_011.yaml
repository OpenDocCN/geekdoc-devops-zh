- en: Primitive Obsession
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://refactoringguru.cn/smells/primitive-obsession](https://refactoringguru.cn/smells/primitive-obsession)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Signs and Symptoms
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Use of primitives instead of small objects for simple tasks (such as currency,
    ranges, special strings for phone numbers, etc.)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use of constants for coding information (such as a constant `USER_ADMIN_ROLE
    = 1` for referring to users with administrator rights.)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use of string constants as field names for use in data arrays.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/72ef46f8a9ec840be64ef6cba01a57c4.png)'
  prefs: []
  type: TYPE_IMG
- en: Reasons for the Problem
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Like most other smells, primitive obsessions are born in moments of weakness.
    "Just a field for storing some data!" the programmer said. Creating a primitive
    field is so much easier than making a whole new class, right? And so it was done.
    Then another field was needed and added in the same way. Lo and behold, the class
    became huge and unwieldy.
  prefs: []
  type: TYPE_NORMAL
- en: Primitives are often used to "simulate" types. So instead of a separate data
    type, you have a set of numbers or strings that form the list of allowable values
    for some entity. Easy-to-understand names are then given to these specific numbers
    and strings via constants, which is why they're spread wide and far.
  prefs: []
  type: TYPE_NORMAL
- en: Another example of poor primitive use is field simulation. The class contains
    a large array of diverse data and string constants (which are specified in the
    class) are used as array indices for getting this data.
  prefs: []
  type: TYPE_NORMAL
- en: Treatment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have a large variety of primitive fields, it may be possible to logically
    group some of them into their own class. Even better, move the behavior associated
    with this data into the class too. For this task, try [Replace Data Value with
    Object](/replace-data-value-with-object).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/3709987ed41b7a12236cde6cbcacdd45.png)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: If the values of primitive fields are used in method parameters, go with [Introduce
    Parameter Object](/introduce-parameter-object) or [Preserve Whole Object](/preserve-whole-object).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When complicated data is coded in variables, use [Replace Type Code with Class](/replace-type-code-with-class),
    [Replace Type Code with Subclasses](/replace-type-code-with-subclasses) or [Replace
    Type Code with State/Strategy](/replace-type-code-with-state-strategy).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If there are arrays among the variables, use [Replace Array with Object](/replace-array-with-object).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/e3c1145a220aa85da05f876b303e9159.png)'
  prefs: []
  type: TYPE_IMG
- en: Payoff
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Code becomes more flexible thanks to use of objects instead of primitives.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better understandability and organization of code. Operations on particular
    data are in the same place, instead of being scattered. No more guessing about
    the reason for all these strange constants and why they're in an array.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Easier finding of duplicate code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[</images/refactoring/banners/tired-of-reading-banner-1x.mp4?id=7fa8f9682afda143c2a491c6ab1c1e56>'
  prefs: []
  type: TYPE_NORMAL
- en: </images/refactoring/banners/tired-of-reading-banner.png?id=1721d160ff9c84cbf8912f5d282e2bb4>
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support HTML video.](/refactoring/course)
  prefs: []
  type: TYPE_NORMAL
- en: Tired of reading?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: No wonder, it takes 7 hours to read all of the text we have here.
  prefs: []
  type: TYPE_NORMAL
- en: Try our interactive course on refactoring. It offers a less tedious approach
    to learning new stuff.
  prefs: []
  type: TYPE_NORMAL
- en: '[*Let''s see…*](/refactoring/course)'
  prefs: []
  type: TYPE_NORMAL

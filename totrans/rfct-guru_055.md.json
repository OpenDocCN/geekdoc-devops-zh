["```\nclass Report {\n  // ...\n  void sendReport() {\n    Date nextDay = new Date(previousEnd.getYear(),\n      previousEnd.getMonth(), previousEnd.getDate() + 1);\n    // ...\n  }\n}\n```", "```\nclass Report {\n  // ...\n  void sendReport() {\n    Date newStart = nextDay(previousEnd);\n    // ...\n  }\n  private static Date nextDay(Date arg) {\n    return new Date(arg.getYear(), arg.getMonth(), arg.getDate() + 1);\n  }\n}\n```", "```\nclass Report \n{\n  // ...\n  void SendReport() \n  {\n    DateTime nextDay = previousEnd.AddDays(1);\n    // ...\n  }\n}\n```", "```\nclass Report \n{\n  // ...\n  void SendReport() \n  {\n    DateTime nextDay = NextDay(previousEnd);\n    // ...\n  }\n  private static DateTime NextDay(DateTime date) \n  {\n    return date.AddDays(1);\n  }\n}\n```", "```\nclass Report {\n  // ...\n  public function sendReport() {\n    $previousDate = clone $this->previousDate;\n    $paymentDate = $previousDate->modify(\"+7 days\");\n    // ...\n  }\n}\n```", "```\nclass Report {\n  // ...\n  public function sendReport() {\n    $paymentDate = self::nextWeek($this->previousDate);\n    // ...\n  }\n  /**\n   * Foreign method. Should be in Date.\n   */\n  private static function nextWeek(DateTime $arg) {\n    $previousDate = clone $arg;\n    return $previousDate->modify(\"+7 days\");\n  }\n}\n```", "```\nclass Report:\n    # ...\n    def sendReport(self):\n        nextDay = Date(self.previousEnd.getYear(),\n            self.previousEnd.getMonth(), self.previousEnd.getDate() + 1)\n        # ...\n```", "```\nclass Report:\n    # ...\n    def sendReport(self):\n        newStart = self._nextDay(self.previousEnd)\n        # ...\n\n    def _nextDay(self, arg):\n        return Date(arg.getYear(), arg.getMonth(), arg.getDate() + 1)\n```", "```\nclass Report {\n  // ...\n  sendReport(): void {\n    let nextDay: Date = new Date(previousEnd.getYear(),\n      previousEnd.getMonth(), previousEnd.getDate() + 1);\n    // ...\n  }\n}\n```", "```\nclass Report {\n  // ...\n  sendReport() {\n    let newStart: Date = nextDay(previousEnd);\n    // ...\n  }\n  private static nextDay(arg: Date): Date {\n    return new Date(arg.getFullYear(), arg.getMonth(), arg.getDate() + 1);\n  }\n}\n```"]
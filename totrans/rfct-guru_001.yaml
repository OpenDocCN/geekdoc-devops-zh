- en: Clean code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://refactoringguru.cn/refactoring/what-is-refactoring](https://refactoringguru.cn/refactoring/what-is-refactoring)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The main purpose of refactoring is to fight technical debt. It transforms a
    mess into clean code and simple design.
  prefs: []
  type: TYPE_NORMAL
- en: 'Nice! But what''s clean code, anyway? Here are some of its features:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Clean code is obvious for other programmers.*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*And I''m not talking about super sophisticated algorithms. Poor variable naming,
    bloated classes and methods, magic numbers -you name it- all of that makes code
    sloppy and difficult to grasp.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Clean code doesn''t contain duplication.*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*Each time you have to make a change in a duplicate code, you have to remember
    to make the same change to every instance. This increases the cognitive load and
    slows down the progress.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Clean code contains a minimal number of classes and other moving parts.*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*Less code is less stuff to keep in your head. Less code is less maintenance.
    Less code is fewer bugs. Code is liability, keep it short and simple.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Clean code passes all tests.*'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '*You know your code is dirty when only 95% of your tests passed. You know you''re
    screwed when your test coverage is 0%.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Clean code is easier and cheaper to maintain!*****'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL

- en: Introduce Local Extension
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://refactoringguru.cn/introduce-local-extension](https://refactoringguru.cn/introduce-local-extension)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A utility class doesn't contain some methods that you need. But you can't add
    these methods to the class.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Create a new class containing the methods and make it either the child or wrapper
    of the utility class.
  prefs: []
  type: TYPE_NORMAL
- en: Before![Introduce Local Extension - Before](../Images/5174e7d68cffb107712c086094635e3f.png)After![Introduce
    Local Extension - After](../Images/58ac66e2c1e86cdf9d6eb9ff334742ef.png)
  prefs: []
  type: TYPE_NORMAL
- en: Why Refactor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The class that you''re using doesn''t have the methods that you need. What''s
    worse, you can''t add these methods (because the classes are in a third-party
    library, for example). There are two ways out:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a **subclass** from the relevant class, containing the methods and inheriting
    everything else from the parent class. This way is easier but is sometimes blocked
    by the utility class itself (due to `final`).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a **wrapper** class that contains all the new methods and elsewhere will
    delegate to the related object from the utility class. This method is more work
    since you need not only code to maintain the relationship between the wrapper
    and utility object, but also a large number of simple delegating methods in order
    to emulate the public interface of the utility class.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Benefits
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: By moving additional methods to a separate extension class (wrapper or subclass),
    you avoid gumming up client classes with code that doesn't fit. Program components
    are more coherent and are more reusable.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to Refactor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Create a new extension class:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Option A: Make it a child of the utility class.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Option B: If you have decided to make a wrapper, create a field in it for storing
    the utility class object to which delegation will be made. When using this option,
    you will need to also create methods that repeat the public methods of the utility
    class and contain simple delegation to the methods of the utility object.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a constructor that uses the parameters of the constructor of the utility
    class.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Also create an alternative "converting" constructor that takes only the object
    of the original class in its parameters. This will help to substitute the extension
    for the objects of the original class.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create new extended methods in the class. Move foreign methods from other classes
    to this class or else delete the foreign methods if their functionality is already
    present in the extension.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Replace use of the utility class with the new extension class in places where
    its functionality is needed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[</images/refactoring/banners/tired-of-reading-banner-1x.mp4?id=7fa8f9682afda143c2a491c6ab1c1e56>'
  prefs: []
  type: TYPE_NORMAL
- en: </images/refactoring/banners/tired-of-reading-banner.png?id=1721d160ff9c84cbf8912f5d282e2bb4>
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support HTML video.](/refactoring/course)
  prefs: []
  type: TYPE_NORMAL
- en: Tired of reading?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: No wonder, it takes 7 hours to read all of the text we have here.
  prefs: []
  type: TYPE_NORMAL
- en: Try our interactive course on refactoring. It offers a less tedious approach
    to learning new stuff.
  prefs: []
  type: TYPE_NORMAL
- en: '[*Let''s see…*](/refactoring/course)'
  prefs: []
  type: TYPE_NORMAL

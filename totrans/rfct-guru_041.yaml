- en: Extract Variable
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://refactoringguru.cn/extract-variable](https://refactoringguru.cn/extract-variable)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You have an expression that's hard to understand.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Place the result of the expression or its parts in separate variables that are
    self-explanatory.
  prefs: []
  type: TYPE_NORMAL
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Why Refactor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The main reason for extracting variables is to make a complex expression more
    understandable, by dividing it into its intermediate parts. These could be:'
  prefs: []
  type: TYPE_NORMAL
- en: Condition of the `if()` operator or a part of the `?:` operator in C-based languages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A long arithmetic expression without intermediate results
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Long multipart lines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extracting a variable may be the first step towards performing [Extract Method](/extract-method)
    if you see that the extracted expression is used in other places in your code.
  prefs: []
  type: TYPE_NORMAL
- en: Benefits
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: More readable code! Try to give the extracted variables good names that announce
    the variable's purpose loud and clear. More readability, fewer long-winded comments.
    Go for names like `customerTaxValue`, `cityUnemploymentRate`, `clientSalutationString`,
    etc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Drawbacks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: More variables are present in your code. But this is counterbalanced by the
    ease of reading your code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When refactoring conditional expressions, remember that the compiler will most
    likely optimize it to minimize the amount of calculations needed to establish
    the resulting value. Say you have a following expression `if (a() || b()) ...`.
    The program won't call the method `b` if the method `a` returns `true` because
    the resulting value will still be `true`, no matter what value returns `b`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: However, if you extract parts of this expression into variables, both methods
    will always be called, which might hurt performance of the program, especially
    if these methods do some heavyweight work.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: How to Refactor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Insert a new line before the relevant expression and declare a new variable
    there. Assign part of the complex expression to this variable.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Replace that part of the expression with the new variable.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Repeat the process for all complex parts of the expression.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[</images/refactoring/banners/tired-of-reading-banner-1x.mp4?id=7fa8f9682afda143c2a491c6ab1c1e56>'
  prefs: []
  type: TYPE_NORMAL
- en: </images/refactoring/banners/tired-of-reading-banner.png?id=1721d160ff9c84cbf8912f5d282e2bb4>
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support HTML video.](/refactoring/course)
  prefs: []
  type: TYPE_NORMAL
- en: Tired of reading?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: No wonder, it takes 7 hours to read all of the text we have here.
  prefs: []
  type: TYPE_NORMAL
- en: Try our interactive course on refactoring. It offers a less tedious approach
    to learning new stuff.
  prefs: []
  type: TYPE_NORMAL
- en: '[*Let''s see…*](/refactoring/course)'
  prefs: []
  type: TYPE_NORMAL

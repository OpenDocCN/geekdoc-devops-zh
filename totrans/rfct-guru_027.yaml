- en: Data Class
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://refactoringguru.cn/smells/data-class](https://refactoringguru.cn/smells/data-class)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Signs and Symptoms
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A data class refers to a class that contains only fields and crude methods for
    accessing them (getters and setters). These are simply containers for data used
    by other classes. These classes don't contain any additional functionality and
    can't independently operate on the data that they own.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/07c3dcfab17957da245115c94df0830a.png)'
  prefs: []
  type: TYPE_IMG
- en: Reasons for the Problem
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It's a normal thing when a newly created class contains only a few public fields
    (and maybe even a handful of getters/setters). But the true power of objects is
    that they can contain behavior types or operations on their data.
  prefs: []
  type: TYPE_NORMAL
- en: Treatment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If a class contains public fields, use [Encapsulate Field](/encapsulate-field)
    to hide them from direct access and require that access be performed via getters
    and setters only.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use [Encapsulate Collection](/encapsulate-collection) for data stored in collections
    (such as arrays).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Review the client code that uses the class. In it, you may find functionality
    that would be better located in the data class itself. If this is the case, use
    [Move Method](/move-method) and [Extract Method](/extract-method) to migrate this
    functionality to the data class.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: After the class has been filled with well thought-out methods, you may want
    to get rid of old methods for data access that give overly broad access to the
    class data. For this, [Remove Setting Method](/remove-setting-method) and [Hide
    Method](/hide-method) may be helpful.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/caaf0e519c3f3c1df05e8fa0a750d28e.png)'
  prefs: []
  type: TYPE_IMG
- en: Payoff
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Improves understanding and organization of code. Operations on particular data
    are now gathered in a single place, instead of haphazardly throughout the code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Helps you to spot duplication of client code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[</images/refactoring/banners/tired-of-reading-banner-1x.mp4?id=7fa8f9682afda143c2a491c6ab1c1e56>'
  prefs: []
  type: TYPE_NORMAL
- en: </images/refactoring/banners/tired-of-reading-banner.png?id=1721d160ff9c84cbf8912f5d282e2bb4>
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support HTML video.](/refactoring/course)
  prefs: []
  type: TYPE_NORMAL
- en: Tired of reading?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: No wonder, it takes 7 hours to read all of the text we have here.
  prefs: []
  type: TYPE_NORMAL
- en: Try our interactive course on refactoring. It offers a less tedious approach
    to learning new stuff.
  prefs: []
  type: TYPE_NORMAL
- en: '[*Let''s see…*](/refactoring/course)'
  prefs: []
  type: TYPE_NORMAL

["```\ndouble getValueForPeriod(int periodNumber) {\n  try {\n    return values[periodNumber];\n  } catch (ArrayIndexOutOfBoundsException e) {\n    return 0;\n  }\n}\n```", "```\ndouble getValueForPeriod(int periodNumber) {\n  if (periodNumber >= values.length) {\n    return 0;\n  }\n  return values[periodNumber];\n}\n```", "```\ndouble GetValueForPeriod(int periodNumber) \n{\n  try \n  {\n    return values[periodNumber];\n  } \n  catch (IndexOutOfRangeException e) \n  {\n    return 0;\n  }\n}\n```", "```\ndouble GetValueForPeriod(int periodNumber) \n{\n  if (periodNumber >= values.Length) \n  {\n    return 0;\n  }\n  return values[periodNumber];\n}\n```", "```\nfunction getValueForPeriod($periodNumber) {\n  try {\n    return $this->values[$periodNumber];\n  } catch (ArrayIndexOutOfBoundsException $e) {\n    return 0;\n  }\n}\n```", "```\nfunction getValueForPeriod($periodNumber) {\n  if ($periodNumber >= count($this->values)) {\n    return 0;\n  }\n  return $this->values[$periodNumber];\n}\n```", "```\ndef getValueForPeriod(periodNumber):\n    try:\n        return values[periodNumber]\n    except IndexError:\n        return 0\n```", "```\ndef getValueForPeriod(self, periodNumber):\n    if periodNumber >= len(self.values):\n        return 0\n    return self.values[periodNumber]\n```", "```\ngetValueForPeriod(periodNumber: number): number {\n  try {\n    return values[periodNumber];\n  } catch (ArrayIndexOutOfBoundsException e) {\n    return 0;\n  }\n}\n```", "```\ngetValueForPeriod(periodNumber: number): number {\n  if (periodNumber >= values.length) {\n    return 0;\n  }\n  return values[periodNumber];\n}\n```"]
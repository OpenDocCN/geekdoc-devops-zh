- en: Self Encapsulate Field
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://refactoringguru.cn/self-encapsulate-field](https://refactoringguru.cn/self-encapsulate-field)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Self-encapsulation is distinct from ordinary [Encapsulate Field](/encapsulate-field):
    the refactoring technique given here is performed on a private field.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You use direct access to private fields inside a class.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Create a getter and setter for the field, and use only them for accessing the
    field.
  prefs: []
  type: TYPE_NORMAL
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Why Refactor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Sometimes directly accessing a private field inside a class just isn't flexible
    enough. You want to be able to initiate a field value when the first query is
    made or perform certain operations on new values of the field when they're assigned,
    or maybe do all this in various ways in subclasses.
  prefs: []
  type: TYPE_NORMAL
- en: Benefits
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*Indirect access to fields* is when a field is acted on via access methods
    (getters and setters). This approach is much more flexible than *direct access
    to fields*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: First, you can perform complex operations when data in the field is set or received.
    *Lazy initialization* and *validation of field values* are easily implemented
    inside field getters and setters.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Second and more crucially, you can redefine getters and setters in subclasses.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: You have the option of not implementing a setter for a field at all. The field
    value will be specified only in the constructor, thus making the field unchangeable
    throughout the entire object lifespan.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Drawbacks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When *direct access to fields* is used, code looks simpler and more presentable,
    although flexibility is diminished.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to Refactor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Create a getter (and optional setter) for the field. They should be either `protected`
    or `public`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find all direct invocations of the field and replace them with getter and setter
    calls.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[</images/refactoring/banners/tired-of-reading-banner-1x.mp4?id=7fa8f9682afda143c2a491c6ab1c1e56>'
  prefs: []
  type: TYPE_NORMAL
- en: </images/refactoring/banners/tired-of-reading-banner.png?id=1721d160ff9c84cbf8912f5d282e2bb4>
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support HTML video.](/refactoring/course)
  prefs: []
  type: TYPE_NORMAL
- en: Tired of reading?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: No wonder, it takes 7 hours to read all of the text we have here.
  prefs: []
  type: TYPE_NORMAL
- en: Try our interactive course on refactoring. It offers a less tedious approach
    to learning new stuff.
  prefs: []
  type: TYPE_NORMAL
- en: '[*Let''s see…*](/refactoring/course)'
  prefs: []
  type: TYPE_NORMAL

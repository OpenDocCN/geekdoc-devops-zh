- en: Rename Method
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://refactoringguru.cn/rename-method](https://refactoringguru.cn/rename-method)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The name of a method doesn't explain what the method does.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Rename the method.
  prefs: []
  type: TYPE_NORMAL
- en: Before![Rename Method - Before](../Images/70ae2e1f15a4fb52fb5072d225174e50.png)After![Rename
    Method - After](../Images/dd39c41b3b9c03af7ee9efdcfd357ce5.png)
  prefs: []
  type: TYPE_NORMAL
- en: Why Refactor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Perhaps a method was poorly named from the very beginning—for example, someone
    created the method in a rush and didn't give proper care to naming it well.
  prefs: []
  type: TYPE_NORMAL
- en: Or perhaps the method was well named at first but as its functionality grew,
    the method name stopped being a good descriptor.
  prefs: []
  type: TYPE_NORMAL
- en: Benefits
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Code readability. Try to give the new method a name that reflects what it does.
    Something like `createOrder()`, `renderCustomerInfo()`, etc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to Refactor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: See whether the method is defined in a superclass or subclass. If so, you must
    repeat all steps in these classes too.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The next method is important for maintaining the functionality of the program
    during the refactoring process. Create a new method with a new name. Copy the
    code of the old method to it. Delete all the code in the old method and, instead
    of it, insert a call for the new method.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find all references to the old method and replace them with references to the
    new one.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Delete the old method. If the old method is part of a public interface, don't
    perform this step. Instead, mark the old method as deprecated.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[</images/refactoring/banners/tired-of-reading-banner-1x.mp4?id=7fa8f9682afda143c2a491c6ab1c1e56>'
  prefs: []
  type: TYPE_NORMAL
- en: </images/refactoring/banners/tired-of-reading-banner.png?id=1721d160ff9c84cbf8912f5d282e2bb4>
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support HTML video.](/refactoring/course)
  prefs: []
  type: TYPE_NORMAL
- en: Tired of reading?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: No wonder, it takes 7 hours to read all of the text we have here.
  prefs: []
  type: TYPE_NORMAL
- en: Try our interactive course on refactoring. It offers a less tedious approach
    to learning new stuff.
  prefs: []
  type: TYPE_NORMAL
- en: '[*Let''s see…*](/refactoring/course)'
  prefs: []
  type: TYPE_NORMAL

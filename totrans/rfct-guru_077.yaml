- en: Remove Control Flag
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://refactoringguru.cn/remove-control-flag](https://refactoringguru.cn/remove-control-flag)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You have a boolean variable that acts as a control flag for multiple boolean
    expressions.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Instead of the variable, use `break`, `continue` and `return`.
  prefs: []
  type: TYPE_NORMAL
- en: Why Refactor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Control flags date back to the days of yore, when "proper" programmers always
    had one entry point for their functions (the function declaration line) and one
    exit point (at the very end of the function).
  prefs: []
  type: TYPE_NORMAL
- en: 'In modern programming languages this style tic is obsolete, since we have special
    operators for modifying the control flow in loops and other complex constructions:'
  prefs: []
  type: TYPE_NORMAL
- en: '`break`: stops loop'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`continue`: stops execution of the current loop branch and goes to check the
    loop conditions in the next iteration'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`return`: stops execution of the entire function and returns its result if
    given in the operator'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Benefits
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Control flag code is often much more ponderous than code written with control
    flow operators.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to Refactor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Find the value assignment to the control flag that causes the exit from the
    loop or current iteration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Replace it with `break`, if this is an exit from a loop; `continue`, if this
    is an exit from an iteration, or `return`, if you need to return this value from
    the function.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Remove the remaining code and checks associated with the control flag.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[</images/refactoring/banners/tired-of-reading-banner-1x.mp4?id=7fa8f9682afda143c2a491c6ab1c1e56>'
  prefs: []
  type: TYPE_NORMAL
- en: </images/refactoring/banners/tired-of-reading-banner.png?id=1721d160ff9c84cbf8912f5d282e2bb4>
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support HTML video.](/refactoring/course)
  prefs: []
  type: TYPE_NORMAL
- en: Tired of reading?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: No wonder, it takes 7 hours to read all of the text we have here.
  prefs: []
  type: TYPE_NORMAL
- en: Try our interactive course on refactoring. It offers a less tedious approach
    to learning new stuff.
  prefs: []
  type: TYPE_NORMAL
- en: '[*Let''s see…*](/refactoring/course)'
  prefs: []
  type: TYPE_NORMAL

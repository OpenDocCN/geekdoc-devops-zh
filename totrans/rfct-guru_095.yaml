- en: Replace Error Code with Exception
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://refactoringguru.cn/replace-error-code-with-exception](https://refactoringguru.cn/replace-error-code-with-exception)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A method returns a special value that indicates an error?
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Throw an exception instead.
  prefs: []
  type: TYPE_NORMAL
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Before
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: After
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Why Refactor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Returning error codes is an obsolete holdover from procedural programming. In
    modern programming, error handling is performed by special classes, which are
    named exceptions. If a problem occurs, you "throw" an error, which is then "caught"
    by one of the exception handlers. Special error-handling code, which is ignored
    in normal conditions, is activated to respond.
  prefs: []
  type: TYPE_NORMAL
- en: Benefits
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Frees code from a large number of conditionals for checking various error codes.
    Exception handlers are a much more succinct way to differentiate normal execution
    paths from abnormal ones.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exception classes can implement their own methods, thus containing part of the
    error handling functionality (such as for sending error messages).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unlike exceptions, error codes can't be used in a constructor, since a constructor
    must return only a new object.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Drawbacks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An exception handler can turn into a goto-like crutch. Avoid this! Don't use
    exceptions to manage code execution. Exceptions should be thrown only to inform
    of an error or critical situation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to Refactor
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Try to perform these refactoring steps for only one error code at a time. This
    will make it easier to keep all the important information in your head and avoid
    errors.
  prefs: []
  type: TYPE_NORMAL
- en: Find all calls to a method that returns error codes and, instead of checking
    for an error code, wrap it in `try`/`catch` blocks.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Inside the method, instead of returning an error code, throw an exception.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Change the method signature so that it contains information about the exception
    being thrown (`@throws` section).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[</images/refactoring/banners/tired-of-reading-banner-1x.mp4?id=7fa8f9682afda143c2a491c6ab1c1e56>'
  prefs: []
  type: TYPE_NORMAL
- en: </images/refactoring/banners/tired-of-reading-banner.png?id=1721d160ff9c84cbf8912f5d282e2bb4>
  prefs: []
  type: TYPE_NORMAL
- en: Your browser does not support HTML video.](/refactoring/course)
  prefs: []
  type: TYPE_NORMAL
- en: Tired of reading?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: No wonder, it takes 7 hours to read all of the text we have here.
  prefs: []
  type: TYPE_NORMAL
- en: Try our interactive course on refactoring. It offers a less tedious approach
    to learning new stuff.
  prefs: []
  type: TYPE_NORMAL
- en: '[*Let''s see…*](/refactoring/course)'
  prefs: []
  type: TYPE_NORMAL

["```\nString foundPerson(String[] people){\n  for (int i = 0; i < people.length; i++) {\n    if (people[i].equals(\"Don\")){\n      return \"Don\";\n    }\n    if (people[i].equals(\"John\")){\n      return \"John\";\n    }\n    if (people[i].equals(\"Kent\")){\n      return \"Kent\";\n    }\n  }\n  return \"\";\n}\n```", "```\nString foundPerson(String[] people){\n  List candidates =\n    Arrays.asList(new String[] {\"Don\", \"John\", \"Kent\"});\n  for (int i=0; i < people.length; i++) {\n    if (candidates.contains(people[i])) {\n      return people[i];\n    }\n  }\n  return \"\";\n}\n```", "```\nstring FoundPerson(string[] people)\n{\n  for (int i = 0; i < people.Length; i++) \n  {\n    if (people[i].Equals(\"Don\"))\n    {\n      return \"Don\";\n    }\n    if (people[i].Equals(\"John\"))\n    {\n      return \"John\";\n    }\n    if (people[i].Equals(\"Kent\"))\n    {\n      return \"Kent\";\n    }\n  }\n  return String.Empty;\n}\n```", "```\nstring FoundPerson(string[] people)\n{\n  List<string> candidates = new List<string>() {\"Don\", \"John\", \"Kent\"};\n\n  for (int i = 0; i < people.Length; i++) \n  {\n    if (candidates.Contains(people[i])) \n    {\n      return people[i];\n    }\n  }\n\n  return String.Empty;\n}\n```", "```\nfunction foundPerson(array $people){\n  for ($i = 0; $i < count($people); $i++) {\n    if ($people[$i] === \"Don\") {\n      return \"Don\";\n    }\n    if ($people[$i] === \"John\") {\n      return \"John\";\n    }\n    if ($people[$i] === \"Kent\") {\n      return \"Kent\";\n    }\n  }\n  return \"\";\n}\n```", "```\nfunction foundPerson(array $people){\n  foreach ([\"Don\", \"John\", \"Kent\"] as $needle) {\n    $id = array_search($needle, $people, true);\n    if ($id !== false) {\n      return $people[$id];\n    }\n  }\n  return \"\";\n}\n```", "```\ndef foundPerson(people):\n    for i in range(len(people)):\n        if people[i] == \"Don\":\n            return \"Don\"\n        if people[i] == \"John\":\n            return \"John\"\n        if people[i] == \"Kent\":\n            return \"Kent\"\n    return \"\"\n```", "```\ndef foundPerson(people):\n    candidates = [\"Don\", \"John\", \"Kent\"]\n    return people if people in candidates else \"\"\n\n```", "```\nfoundPerson(people: string[]): string{\n  for (let person of people) {\n    if (person.equals(\"Don\")){\n      return \"Don\";\n    }\n    if (person.equals(\"John\")){\n      return \"John\";\n    }\n    if (person.equals(\"Kent\")){\n      return \"Kent\";\n    }\n  }\n  return \"\";\n}\n```", "```\nfoundPerson(people: string[]): string{\n  let candidates = [\"Don\", \"John\", \"Kent\"];\n  for (let person of people) {\n    if (candidates.includes(person)) {\n      return person;\n    }\n  }\n  return \"\";\n}\n```"]